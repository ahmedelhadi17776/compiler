%{
#include "compiler.tab.h" // Generated by Yacc to share token definitions
%}
%option yylineno
%%
"if"          { return IF; }
"else"        { return ELSE; }
"print"       { return PRINT; }

[a-zA-Z][a-zA-Z0-9]* { yylval.id = strdup(yytext); return ID; } // Identifiers
[0-9]+        { yylval.ival = atoi(yytext); return INT_NUM; } // Integers
[0-9]+\.[0-9]+ { yylval.fval = atof(yytext); return FLOAT_NUM; } // Floats

"+"           { return ADD; }
"-"           { return SUB; }
"*"           { return MUL; }
"/"           { return DIV; }
"="           { return ASSIGN; }
"=="          { return EQ; }
"!="          { return NE; }
"<"           { return LT; }
">"           { return GT; }
"<="          { return LE; }
">="          { return GE; }

";"           { return ';'; }
"("           { return '('; }
")"           { return ')'; }

[ \t]         ; // Ignore whitespace
[\n\r]+       { /* yylineno is automatically incremented */ }
.             { fprintf(stderr, "Error on line %d: Unexpected character '%c'\n", yylineno, *yytext); }
%%
int yywrap(void) {
    return 1;
}
